---
AWSTemplateFormatVersion: "2010-09-09"

Description: "WebService Lambda stack"
Metadata: {}

Parameters: {}

Conditions: {}
Rules: {}
Mappings: {}

Resources:
  WebServiceLambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - "lambda.amazonaws.com"
      Description: "WebService Lambda Execution Role"
      #ManagedPolicyArns:
      #  - String
      #MaxSessionDuration: Integer
      Path: "/webservice/iam/lambda/execution/role/"
      #PermissionsBoundary: String
      #Policies:
      #  - Policy
      RoleName: "WebServiceLambdaExecutionRole"
      #Tags:
      #  - Tag

  WebServiceHelloWorldFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Architectures:
        - "x86_64"
      Code: "../target/WebService-0.jar"
      #CodeSigningConfigArn: String
      #DeadLetterConfig:
      #  DeadLetterConfig
      Description: "WebService HelloWorld Function"
      #Environment:
      #  Environment
      #EphemeralStorage:
      #  EphemeralStorage
      #FileSystemConfigs:
      #  - FileSystemConfig
      FunctionName: "HelloWorldFunction"
      Handler: "com.ethanpritchard.webservice.functions.HelloWorldFunction"
      #ImageConfig:
      #  ImageConfig
      #KmsKeyArn: String
      #Layers:
      #  - String
      #MemorySize: Integer
      PackageType: "Zip"
      #Policy: Json
      #ReservedConcurrentExecutions: Integer
      Role: !GetAtt "WebServiceLambdaExecutionRole.Arn"
      Runtime: "java8"
      #RuntimeManagementConfig:
      #  RuntimeManagementConfig
      #SnapStart:
      #  SnapStart
      #Tags:
      #  - Tag
      #Timeout: Integer
      #TracingConfig:
      #  TracingConfig
      #VpcConfig:
      #  VpcConfig

Outputs: {}
