AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for a serverless web service with a Java backend and React frontend.

Resources:
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: com.example.WebService::handleRequest
      Runtime: java11
      Code:
        S3Bucket: my-lambda-functions
        S3Key: WebService.jar
      Environment:
        Variables:
          TABLE_NAME: MyDynamoDBTable
      Role: !GetAtt LambdaExecutionRole.Arn

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: LambdaDynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - dynamodb:*
                Resource: !GetAtt MyDynamoDBTable.Arn

  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MyDynamoDBTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  MyApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties: 
      Name: MyAPI
      Description: API Gateway for the Lambda function
      FailOnWarnings: 'true'

  ApiGatewayResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref MyApiGateway
      ParentId: !GetAtt 'MyApiGateway.RootResourceId'
      PathPart: 'resource'

  ApiGatewayMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref MyApiGateway
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: 'GET'
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: 'POST'
        Type: AWS_PROXY
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaFunction.Arn}/invocations'

Outputs:
  ApiGatewayUrl:
    Description: URL of the API Gateway
    Value: !Sub 'https://${MyApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod'

